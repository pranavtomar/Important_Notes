I wish someone had given me this cheat sheet when I started interviewing for software engineering positions. 

Topics covered: SOLID, ACID, System design concepts & Leetcode patterns. 

► SOLID Principles:

1. Single Responsibility: Each class should have only one job.
2. Open/Closed: Classes should be extendable without being modified.
3. Liskov Substitution: Subclasses should be replaceable with their parent classes.
4. Interface Segregation: Prefer small, specific interfaces over general ones.
5. Dependency Inversion: Rely on abstractions rather than specific implementations.


►ACID Properties:

1. Atomicity: Transactions are indivisible units; they either fully succeed or completely fail.
2. Consistency: Each transaction must maintain the database's consistency.
3. Isolation: Transactions should execute independently without affecting each other.
4. Durability: Once a transaction is finalized, it must persist even through system failures.

► System Design Key Concepts

1. Scalability: https://lnkd.in/gpge_z76
2. Latency vs Throughput: https://lnkd.in/g_amhAtN
3. CAP Theorem: https://lnkd.in/g3hmVamx
4. ACID Transactions: https://lnkd.in/gMe2JqaF
5. Rate Limiting: https://lnkd.in/gWsTDR3m
6. API Design: https://lnkd.in/ghYzrr8q
7. Strong vs Eventual Consistency: https://lnkd.in/gJ-uXQXZ
8. Distributed Tracing: https://lnkd.in/d6r5RdXG
9. Synchronous vs. asynchronous communications: https://lnkd.in/gC3F2nvr
10. Batch Processing vs Stream Processing: https://lnkd.in/g4_MzM4s
11. Fault Tolerance: https://lnkd.in/dVJ6n3wA

► Leetcode problem-solving patterns

Here’s a randomized and reformatted list of the provided patterns with numbers:

1. Backtracking Patterns: https://lnkd.in/gVkQX5vA
2. Bit Manipulation Patterns: https://lnkd.in/gmMMST5J
3. Dynamic Programming Patterns 1: https://lnkd.in/gbpRU46g
4. DFS + BFS Patterns (2): https://lnkd.in/gd4ekfQe
5. Tree Patterns: https://lnkd.in/gKja_D5H
6. Sliding Window Patterns: https://lnkd.in/gjatQ5pK
7. Two Pointers Patterns: https://lnkd.in/gBfWgHYe
8. DFS + BFS Patterns (1): https://lnkd.in/gPgpsgaQ
9. Graph Patterns: https://lnkd.in/gKE6w7Jb
10. Monotonic Stack Patterns: https://lnkd.in/gdYahWVN
11. Substring Problem Patterns: https://lnkd.in/giASrwds
12. Backtracking Patterns: https://lnkd.in/g9csxVa4
13. Dynamic Programming Patterns 2: https://lnkd.in/gcnBActT
14. Binary Search Patterns: https://lnkd.in/gKEm_qUK
15. String Question Patterns: https://lnkd.in/gkNvEi8j
16. 14 Coding Interview Patterns: https://lnkd.in/gMZJVkFf
